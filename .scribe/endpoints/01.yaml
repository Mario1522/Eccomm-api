name: Products
description: 'APIs for viewing products'
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: 'APIs for viewing products'
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all products'
      description: |-
        Returns a list of all products with their associated images.

        This endpoint retrieves all available products in the database, along with any images attached to them.
        It requires authentication.
      authenticated: false
      custom: []
    headers:
      Accept: application/json
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Products retrieved successfully",
            "products": [
              {
                "id": 1,
                "name": "iPhone 15",
                "description": "Latest iPhone model with new features",
                "price": 999.99,
                "created_at": "2024-07-01T12:00:00.000000Z",
                "updated_at": "2024-07-01T12:00:00.000000Z",
                "images": [
                  {
                    "id": 10,
                    "product_id": 1,
                    "url": "https://example.com/images/iphone15-front.jpg",
                    "created_at": "2024-07-01T12:00:00.000000Z",
                    "updated_at": "2024-07-01T12:00:00.000000Z"
                  }
                ]
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "Internal server error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: 'APIs for managing products'
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new product'
      description: 'Creates a new product with a name, price, stock quantity, description, category, and one or more images.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer your-api-token-here'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the product.'
        required: true
        example: 'iPhone 15'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      price:
        name: price
        description: 'The price of the product.'
        required: true
        example: 999.99
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      stock:
        name: stock
        description: 'How many items in stock.'
        required: true
        example: 50
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The product description (optional).'
        required: false
        example: 'Latest iPhone with improved camera'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      category_id:
        name: category_id
        description: 'The ID of the category this product belongs to.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      images:
        name: images
        description: 'Array of image files (JPEG, PNG, etc.). Each must be under 2MB.'
        required: true
        example:
          - null
        type: 'file[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'iPhone 15'
      price: 999.99
      stock: 50
      description: 'Latest iPhone with improved camera'
      category_id: 3
    fileParameters:
      images:
        - null
    responses:
      -
        status: 201
        content: |-
          {
            "message": "Product created successfully",
            "data": {
              "id": 10,
              "name": "iPhone 15",
              "slug": "iphone-15",
              "price": 999.99,
              "stock": 50,
              "description": "Latest iPhone with improved camera",
              "category_id": 3,
              "created_at": "2024-07-01T12:00:00.000000Z",
              "updated_at": "2024-07-01T12:00:00.000000Z",
              "images": [
                {
                  "id": 101,
                  "product_id": 10,
                  "image": "products/iphone-15/65fd123abc_front.jpg",
                  "created_at": "2024-07-01T12:00:00.000000Z",
                  "updated_at": "2024-07-01T12:00:00.000000Z"
                }
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "name": [
                "The name field is required."
              ],
              "price": [
                "The price must be a number."
              ],
              "images.0": [
                "The images.0 must be an image."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
